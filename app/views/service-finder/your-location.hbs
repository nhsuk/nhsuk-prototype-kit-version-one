{{> components/local_header
  title="Service Finder"
  text="Using your current location, we will find nearby services."}}

{{#if error.postcodeFormat}}
  <div class="callout callout--info callout--compact">
    <p>Unable to determine location for {{postcode}}. Try another.</p>
  </div>
{{/if}}

{{#if error.locationOutOfRange}}
  <div class="callout callout--info callout--compact">
    <p>Sorry, your location is not within the range we are able to search.</p>
  </div>
{{/if}}

<form method="POST" id="no-geolocation">
  <div class="form-group">
    <label for="postcode-no-geolocation">
      Enter your postcode
      <small>(e.g. YO23 1BG)</small>
    </label>
    <input type="text" name="postcode" id="postcode-no-geolocation">
  </div>
  <input type="submit" class="button" value="Submit">
</form>

<form method="POST" id="has-geolocation">
  <fieldset>
    <div class="form-group">
      <label>
        <input type="radio" name="locationStrategy" value="postcode"
          {{#if isPostcodeStrategy}}checked{{/if}}>
        Use my postcode to determine my location
      </label>
      <div class="form-group reveal-if-postcode-selected">
        <label for="postcode-has-geolocation">
          Enter your postcode
          <small>(e.g. YO23 1BG)</small>
        </label>
        <input type="text" name="postcode" id="postcode-has-geolocation">
      </div>
    </div>
    <div class="form-group">
      <label>
        <input type="radio" name="locationStrategy" value="geolocation"
          {{#if isGeolocationStrategy}}checked{{/if}}>
        Automatically determine my location
      </label>
      <input type="hidden" name="lat" disabled>
      <input type="hidden" name="long" disabled>
    </div>
  </fieldset>
  <input type="submit" class="button" value="Submit">
</form>

<script>
function setupPage () {
  // set class on body element based on availability of browser's Geolocation API
  document.body.classList.add(
    ('geolocation' in navigator) ? 'has-geolocation' : 'no-geolocation'
  )

  // event handlers for the geolocation-based input form
  var form = document.getElementById('has-geolocation')
  var submitButton = form.querySelector('input[type=submit]')

  function getSelectedLocationStrategy () {
    return (form.querySelector('input[name=locationStrategy]:checked') || {}).value
  }

  function onChange (ev) {
    // set class on form based on which location strategy is checked
    form.classList.remove('postcode-selected')
    form.classList.remove('geolocation-selected')
    submitButton.disabled = true

    var selected = getSelectedLocationStrategy()
    if (selected) {
      form.classList.add(selected + '-selected')
      submitButton.disabled = false
    }
  }

  form.addEventListener('change', onChange)
  form.addEventListener('submit', function (ev) {
    // if the user requested geolocation, attempt it now
    if (getSelectedLocationStrategy() === 'geolocation') {
      // we will programatically submit the form when the location returns
      ev.preventDefault()

      navigator.geolocation.getCurrentPosition(
        function (position) {
          var elLat = form.querySelector('input[name=lat]')
          var elLong = form.querySelector('input[name=long]')

          elLat.disabled = false
          elLat.value = position.coords.latitude
          elLong.disabled = false
          elLong.value = position.coords.longitude
          form.submit()
        },
        function (error) {
          window.alert(error.message)
        }
      )
    }
  })

  onChange()
}

window.addEventListener('load', setupPage)
</script>

<style>
/* hide both forms by default, make one visible according to availability of
   browser's Geolocation API */
#no-geolocation, #has-geolocation { display: none; }
.has-geolocation #has-geolocation { display: block; }
.no-geolocation #no-geolocation { display: block; }

/* hide the postcode input unless the script has marked the form as having the
   postcode selected */
#has-geolocation .reveal-if-postcode-selected { display: none; }
#has-geolocation.postcode-selected .reveal-if-postcode-selected { display: block; }
</style>
